{"ast":null,"code":"import{checkResponse}from'./utils';export var BASE_URL='https://api.shmovies.nomoredomains.rocks';export var register=function register(name,email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({name:name,email:email,password:password})}).then(function(res){return checkResponse(res);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponse(res);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(res){return checkResponse(res);});};// метод делает запрос серверу и получает данные профиля\nexport var getUserInfo=function getUserInfo(){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{Authorization:\"Bearer \".concat(localStorage.getItem('jwt')),'Content-Type':'application/json'}}).then(function(res){return checkResponse(res);});};// метод изменяет данные профиля на сервере\nexport var setUserInfo=function setUserInfo(data){// console.log(data);\nreturn fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'PATCH',//метод запроса\nheaders:{Authorization:\"Bearer \".concat(localStorage.getItem('jwt')),'Content-Type':'application/json'},//заголовки запроса\nbody:JSON.stringify({//тело запроса\nname:data.name,//в name передаем значение name объекта, переданного в setUserInfo\nemail:data.email//в about передаем значение about объекта, переданного в setUserInfo\n})}).then(function(res){return checkResponse(res);});};export var getCards=function getCards(){return fetch(\"\".concat(BASE_URL,\"/movies\"),{method:'GET',headers:{Authorization:\"Bearer \".concat(localStorage.getItem('jwt')),'Content-Type':'application/json'}}).then(function(res){return checkResponse(res);});};// метод добавления новой карточки на сервер\nexport var postCard=function postCard(data){// console.log(data);\nreturn fetch(\"\".concat(BASE_URL,\"/movies\"),{method:'POST',headers:{Authorization:\"Bearer \".concat(localStorage.getItem('jwt')),'Content-Type':'application/json'},body:JSON.stringify({country:data.country,director:data.director,duration:data.duration,year:data.year,description:data.description,image:'https://api.nomoreparties.co'+data.image.url,trailerLink:data.trailerLink,thumbnail:'https://api.nomoreparties.co'+data.image.formats.thumbnail.url,movieId:data.id,nameRU:data.nameRU,nameEN:data.nameEN})}).then(function(res){return checkResponse(res);});};// метод удаления карточки с сервера\nexport var deleteCard=function deleteCard(cardId){return fetch(\"\".concat(BASE_URL,\"/movies/\").concat(cardId),{method:'DELETE',headers:{Authorization:\"Bearer \".concat(localStorage.getItem('jwt')),'Content-Type':'application/json'}}).then(function(res){return checkResponse(res);});};","map":{"version":3,"names":["checkResponse","BASE_URL","register","name","email","password","fetch","concat","method","headers","Accept","body","JSON","stringify","then","res","authorize","getContent","token","Authorization","getUserInfo","localStorage","getItem","setUserInfo","data","getCards","postCard","country","director","duration","year","description","image","url","trailerLink","thumbnail","formats","movieId","id","nameRU","nameEN","deleteCard","cardId"],"sources":["/Users/les/dev/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["import { checkResponse } from './utils';\n\nexport const BASE_URL = 'https://api.shmovies.nomoredomains.rocks';\n\nexport const register = (name, email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n    }).then((res) => checkResponse(res));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n    }).then((res) => checkResponse(res));\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n        },\n    }).then((res) => checkResponse(res));\n};\n\n// метод делает запрос серверу и получает данные профиля\nexport const getUserInfo = () => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => checkResponse(res));\n};\n\n// метод изменяет данные профиля на сервере\nexport const setUserInfo = (data) => {\n    // console.log(data);\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'PATCH', //метод запроса\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n            'Content-Type': 'application/json',\n        }, //заголовки запроса\n        body: JSON.stringify({\n            //тело запроса\n            name: data.name, //в name передаем значение name объекта, переданного в setUserInfo\n            email: data.email, //в about передаем значение about объекта, переданного в setUserInfo\n        }),\n    }).then((res) => checkResponse(res));\n};\n\nexport const getCards = () => {\n    return fetch(`${BASE_URL}/movies`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => checkResponse(res));\n};\n\n// метод добавления новой карточки на сервер\nexport const postCard = (data) => {\n    // console.log(data);\n    return fetch(`${BASE_URL}/movies`, {\n        method: 'POST',\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            country: data.country,\n            director: data.director,\n            duration: data.duration,\n            year: data.year,\n            description: data.description,\n            image: 'https://api.nomoreparties.co' + data.image.url,\n            trailerLink: data.trailerLink,\n            thumbnail: 'https://api.nomoreparties.co' + data.image.formats.thumbnail.url,\n            movieId: data.id,\n            nameRU: data.nameRU,\n            nameEN: data.nameEN,\n        }),\n    }).then((res) => checkResponse(res));\n};\n\n// метод удаления карточки с сервера\nexport const deleteCard = (cardId) => {\n    return fetch(`${BASE_URL}/movies/${cardId}`, {\n        method: 'DELETE',\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => checkResponse(res));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}