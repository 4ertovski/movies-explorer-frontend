{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useForm = () => {\n  _s();\n  const [enteredValues, setEnteredValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isFormValid, setIsFormValid] = useState(false);\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setEnteredValues({\n      ...enteredValues,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: event.target.validationMessage\n    });\n    setIsFormValid(event.target.closest('#form').checkValidity());\n  };\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsFormValid = false) => {\n    setEnteredValues(newValues);\n    setErrors(newErrors);\n    setIsFormValid(newIsFormValid);\n  }, [setEnteredValues, setErrors, setIsFormValid]);\n  return {\n    enteredValues,\n    errors,\n    handleChange,\n    isFormValid,\n    resetForm\n  };\n};\n_s(useForm, \"Aw8eP9I8kdGvwhJGbt3kfIm4jWc=\");\nexport default useForm;","map":{"version":3,"names":["useState","useCallback","useForm","_s","enteredValues","setEnteredValues","errors","setErrors","isFormValid","setIsFormValid","handleChange","event","name","target","value","validationMessage","closest","checkValidity","resetForm","newValues","newErrors","newIsFormValid"],"sources":["/Users/les/dev/movies-explorer-frontend/src/components/hooks/useForm.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useForm = () => {\n    const [enteredValues, setEnteredValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setEnteredValues({\n            ...enteredValues,\n            [name]: value,\n        });\n\n        setErrors({\n            ...errors,\n            [name]: event.target.validationMessage,\n        });\n\n        setIsFormValid(event.target.closest('#form').checkValidity());\n    };\n\n    const resetForm = useCallback(\n        (newValues = {}, newErrors = {}, newIsFormValid = false) => {\n            setEnteredValues(newValues);\n            setErrors(newErrors);\n            setIsFormValid(newIsFormValid);\n        },\n        [setEnteredValues, setErrors, setIsFormValid],\n    );\n\n    return {\n        enteredValues,\n        errors,\n        handleChange,\n        isFormValid,\n        resetForm,\n    };\n};\n\nexport default useForm;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,MAAME,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;IAEhCT,gBAAgB,CAAC;MACb,GAAGD,aAAa;MAChB,CAACQ,IAAI,GAAGE;IACZ,CAAC,CAAC;IAEFP,SAAS,CAAC;MACN,GAAGD,MAAM;MACT,CAACM,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACE;IACzB,CAAC,CAAC;IAEFN,cAAc,CAACE,KAAK,CAACE,MAAM,CAACG,OAAO,CAAC,OAAO,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,SAAS,GAAGjB,WAAW,CACzB,CAACkB,SAAS,GAAG,CAAC,CAAC,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAEC,cAAc,GAAG,KAAK,KAAK;IACxDhB,gBAAgB,CAACc,SAAS,CAAC;IAC3BZ,SAAS,CAACa,SAAS,CAAC;IACpBX,cAAc,CAACY,cAAc,CAAC;EAClC,CAAC,EACD,CAAChB,gBAAgB,EAAEE,SAAS,EAAEE,cAAc,CAChD,CAAC;EAED,OAAO;IACHL,aAAa;IACbE,MAAM;IACNI,YAAY;IACZF,WAAW;IACXU;EACJ,CAAC;AACL,CAAC;AAACf,EAAA,CAtCID,OAAO;AAwCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}